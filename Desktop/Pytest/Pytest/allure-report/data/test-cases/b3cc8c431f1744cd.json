{"uid":"b3cc8c431f1744cd","name":"test_m1","fullName":"test_pytestbasics#test_m1","historyId":"f09aba8dd68675d3aff44528e90a0827","time":{"start":1747369338013,"stop":1747369338013,"duration":0},"status":"failed","statusMessage":"AssertionError: test got failed\nassert (4 + 1) == 3","statusTrace":"def test_m1():\n        a=4\n        b=3\n>       assert a+1==b, \"test got failed\"\nE       AssertionError: test got failed\nE       assert (4 + 1) == 3\n\ntest_pytestbasics.py:6: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"suite","value":"test_pytestbasics"},{"name":"host","value":"Madhu"},{"name":"thread","value":"30016-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_pytestbasics"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d50a8a51f182c2e5","status":"failed","statusDetails":"AssertionError: test got failed\nassert (4 + 1) == 3","time":{"start":1747369265210,"stop":1747369265210,"duration":0}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"b3cc8c431f1744cd.json","parameterValues":[]}